// extract into gradle.d/70-sonarqube as soon as possible
plugins {
    id "org.sonarqube" version "2.0.1"
}

apply plugin: 'base'

ext {
    baseVersion = '0.0.1'
}

// alle Skripte aus ./gradle.d in sortierter Reihenfolge einbinden
file('gradle.d').listFiles().sort().each {
    if (it =~ /.*\.gradle$/) {
        apply from: relativePath(it)
    }
}

allprojects {
    group = 'com.github.reflectoring'
    // creates the continuous delivery release version
    // s. gradle.d/10-snap-ci.gradle
    version = project.getBuildVersion(baseVersion)

    buildscript {
        repositories {
            jcenter()
        }
    }

    // extract into gradle.d/70-sonarqube as soon as possible
    sonarqube {
        properties {
            property "sonar.projectKey", "infiniboard"
            property "sonar.projectName", "infiniboard"
            property "sonar.host.url", "https://sonarqube.com"
            property "sonar.login", getSonarQubeApiKey()
            property "sonar.sourceEncoding", "UTF-8"
        }
    }
}

project(":infiniboard-app") {
    sonarqube {
        properties {
            // as typescript is not supported yet, we have to skip this one
            skipProject = true
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion '2.14'
}

String getSonarQubeApiKey() {
    return this.getEnv('SONARQUBE_API_KEY', '')
}
